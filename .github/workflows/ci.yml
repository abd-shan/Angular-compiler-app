name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [11, 17, 21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Compile with Maven
      run: mvn clean compile
      
    - name: Run tests
      run: mvn test
      
    - name: Test compilation with different test files
      run: |
        java -cp "lib/antlr-4.13.0-complete.jar:.:target/classes" Main tests/test1.txt
        java -cp "lib/antlr-4.13.0-complete.jar:.:target/classes" Main tests/test2.txt
        java -cp "lib/antlr-4.13.0-complete.jar:.:target/classes" Main tests/test3.txt
        java -cp "lib/antlr-4.13.0-complete.jar:.:target/classes" Main tests/test4.txt
        
    - name: Check output generation
      run: |
        ls -la output/
        test -f output/*.html
        test -f output/*.js
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-java-${{ matrix.java-version }}
        path: |
          output/
          target/surefire-reports/
          
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Build with Maven
      run: mvn clean package
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          target/*.jar
          target/classes/
          
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Run security scan
      run: |
        # Add security scanning tools here
        echo "Security scan placeholder"
        
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Check code style
      run: |
        # Add code style checking tools here
        echo "Code style check placeholder"
        
    - name: Generate code coverage
      run: mvn jacoco:report
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: target/site/jacoco/jacoco.xml
